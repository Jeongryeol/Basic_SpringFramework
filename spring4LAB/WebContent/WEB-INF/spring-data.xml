<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!--DB에 접속하는 업무를 담당하는 xml페이지 -->
<!--
	[1] Connection Pull 대상으로 설정하는 방법 : Jeus, Webspere(IBM)
	- 권장방식 : JNDI(Java Naming and Directory Interface)	-->
<!-- 
	<bean id="data-source-targetV2" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>jdbc/dbPool</value>
		</property>
		<property name="resourceRef">
			<value>true</value>
		</property>
	</bean>
-->
<!--
	[2] JDBC로 설정하는 기본방법 : 개발자의 의도대로 전개할 수 있는 방식 -->
	<bean id="data-source-target" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	<!-- setter메소드로 객체주입이 일어나므로 name을 함부로 수정하면 위험하다 -->
		<property name="driverClassName">
			<value>oracle.jdbc.OracleDriver</value>
		</property>
		<property name="url">
			<value>jdbc:oracle:thin:@localhost:orcl11</value>
		<!--<value>jdbc:oracle:oci:@localhost:orcl11</value> 동시접속자가 많은 웹서비스에 적합하지 않은 oci방식은 배제 -->
		</property>
		<property name="username"><!-- public void setUserName(){} -->
			<value>jsp</value>
		</property>
		<property name="password">
			<value>123</value>
		</property>
	</bean>
</beans>
