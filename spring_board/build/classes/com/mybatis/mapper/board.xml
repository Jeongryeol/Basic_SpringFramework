<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.boardMapper">

<!-- ────[VO클래스를 myBatis로 매핑하는 구간ㅌ : 메뉴얼 51페이지]──────────────────────────────────────────────────────────────────────── -->	
	<!-- 부모테이블 VO 파라미터Map사전설정 -->
	<parameterMap id="pBMVO" type="com.mvc.board.MvcBoardMasterVO">
		<parameter property="b_no"		javaType="int" mode="IN"/>
		<parameter property="b_title"	javaType="java.lang.String" mode="IN"/>
		<parameter property="b_name"	javaType="java.lang.String" mode="IN"/>
		<parameter property="b_content"	javaType="java.lang.String" mode="IN"/>
		<parameter property="b_date"	javaType="java.lang.String" mode="IN"/>
		<parameter property="b_hit"		javaType="int" mode="IN"/>
		<parameter property="b_group"	javaType="int" mode="IN"/>
		<parameter property="b_pos"		javaType="int" mode="IN"/>
		<parameter property="b_step"	javaType="int" mode="IN"/>
		<parameter property="b_pwd"		javaType="String" mode="IN"/>
  <!-- 
		B_NO       NUMBER(5),
		B_TITLE    VARCHAR2(200 BYTE),
		B_NAME     VARCHAR2(30 BYTE),
		B_CONTENT  VARCHAR2(4000 BYTE),
		B_DATE     VARCHAR2(20 BYTE),
		B_HIT      NUMBER(10)                         DEFAULT 0,
		B_GROUP    NUMBER(5)                          DEFAULT 0,
		B_POS      NUMBER(5)                          DEFAULT 0,
		B_STEP     NUMBER(5)                          DEFAULT 0,
		B_PWD      VARCHAR2(50 BYTE)
   -->
	</parameterMap>
	<!-- 자식테이블 VO 파라미터Map사전설정 -->
	<parameterMap id="pBSVO" type="com.mvc.board.MvcBoardSubVO">
		<parameter property="b_no"		javaType="int" mode="IN"/>
		<parameter property="b_seq"		javaType="int" mode="IN"/>
		<parameter property="b_file"	javaType="java.lang.String" mode="IN"/>
		<parameter property="b_img"		javaType="java.lang.String" mode="IN"/>
		<parameter property="b_size"	javaType="double" mode="IN"/><!-- 파일크기는 double -->
  <!-- 
		B_NO    NUMBER(5),
  		B_SEQ   NUMBER(5),
		B_FILE  VARCHAR2(100 BYTE),
		B_IMG   VARCHAR2(30 BYTE),
		B_SIZE  NUMBER(10,2)
   -->
	</parameterMap>
	
	<!-- VO클래스로 리턴받을 때 Map으로 받아서 반환함 -->
	<resultMap id="rBMVO" type="com.mvc.board.MvcBoardMasterVO">
		<id property="b_no"		column="b_no" /><!-- PK는 id -->
		<result property="b_title"		column="b_title" />
		<result property="b_name"		column="b_name" />
		<result property="b_content"	column="b_content" />
		<result property="b_date"		column="b_date" />
		<result property="b_hit"		column="b_hit" />
		<result property="b_group"		column="b_group" />
		<result property="b_pos"		column="b_pos" />
		<result property="b_step"		column="b_step" />
		<result property="b_pwd"		column="b_pwd" />
		<!-- 테이블의 부모자식 관계설정 -->
		<association property="bsVO"	resultMap="rBSVO" />
		<!-- getter와 setter가 생성되어있어야 부모테이블에 자식테이블을 주입받음 -->
	</resultMap>
	<resultMap id="rBSVO" type="com.mvc.board.MvcBoardSubVO">
		<id property="b_no"		column="b_no" /><!-- PK는 id -->
		<id property="b_seq"	column="b_seq" /><!-- PK는 id -->
		<result property="b_file"		column="b_file" />
		<result property="b_img"		column="b_img" />
		<result property="b_size"		column="b_size" />
	</resultMap>
<!-- ──────────────────────────────────────────────────────────────────────────── -->
	<select id="totalCount" parameterType="int" resultType="int">
		SELECT count(*) total
		 FROM boardMaster bm, boardSub bs
		WHERE bm.b_no = bs.b_no(+) 	
	</select>
	<update id="hitUpdate" parameterType="map">
		update boardMaster
		   set b_hit = b_hit + 1
		 where b_no =#{b_no}
	</update>
	<insert id="boardMInsert" parameterMap="pBMVO"> <!-- parameterType="map"> -->
		INSERT INTO boardmaster(b_no, b_name, b_title, b_content
		                       ,b_group, b_pos, b_step
		                       ,b_date, b_pwd)
		                 VALUES(#{b_no}, #{b_name}, #{b_title}, #{b_content}
		                       ,#{b_group}, #{b_pos}, #{b_step}
		                       ,to_char(sysdate, 'YYYY-MM-DD'),#{b_pwd})
	</insert>
	<insert id="boardSInsert" parameterMap="pBSVO"> <!-- parameterType="map"> -->
		INSERT INTO boardsub(b_no, b_seq, b_file, b_img,b_size)
		                 VALUES(#{b_no}, 1, #{b_file}, #{b_img},#{b_size})
	</insert>
	
	
	
<!-- 그룹번호 채번하는 쿼리문 추가(새글쓰기에서 필요) -->
	<select id="getBno" parameterType="map" resultType="int">
	SELECT seq_board_no.nextval
      FROM dual
	</select>
	<select id="getGroup" parameterType="map" resultType="int">
		SELECT
		     NVL((SELECT /*+index_desc(boardmastr BMASTER_NO_PK)*/ b_no
		            FROM boardmaster
		           WHERE rownum = 1
		             AND b_no > 0),0)+1 b_no
		  FROM dual
	</select>
	
	
<!-- 	<statement id="stepUpdate" parameterType="map" resultType="map">
		update boardMaster
		      set b_step = b_step+1
		  where b_group = #{b_group} 45(read.jsp)
		     and b_step > #{b_step}   2(read.jsp)		
	</statement> -->
	<update id="boardMUpdate" parameterType="map">
		update boardMaster
		      set b_title = #{b_title}
		         ,b_name = #{b_name}
		         ,b_content = #{b_content}
		         ,b_pwd = #{b_pwd}
		  where b_no = #{b_no} 
	</update>
	<update id="stepUpdate" parameterType="map">
		update boardMaster
		      set b_step = b_step+1
		  where b_group = #{b_group} <!-- 45(read.jsp) -->
		     and b_step > #{b_step}   <!-- 2(read.jsp)	 -->
	</update>
	
	
<!--
	한 업무에 테이블을 2개이상 사용해야할 때, 각각 입력,수정,삭제 처리 할 때는 parameterMap을 사용하는 것이 불편하지 않지만,
	JOIN의 경우에 JSON처리시에 bsVO가 들어오게 되어서 json처리를 별도로 2번 해야한다. ( 만약 테이블이 3개인 경우 3번 처리 )
	즉, map이 훨씬 편함 
 -->
	<select id="getBoardList" parameterType="map" resultType="map"><!-- resultMap="rBMVO"> -->
		SELECT
		      a.b_no, a.b_title, a.b_name, a.b_content
		     ,a.b_date, a.b_hit
		     ,NVL(a.b_file,'없음') b_file
		     ,a.b_pwd
		     ,a.b_group, a.b_pos, a.b_step, a.rno
		     ,DECODE(sign(a.b_size-1 )
		     			,1,a.b_size||'mb'
		     			,0,0||'mb'
		     			,-1,0||a.b_size||'mb') b_size
		  FROM (
		        SELECT
		              bm.b_no, bm.b_title, bm.b_name, bm.b_content
		             ,bm.b_date, bm.b_hit, NVL(bs.b_file,'없음') b_file, bm.b_pwd
		             ,bm.b_group, bm.b_pos, bm.b_step, rownum rno
		             ,bs.b_size
		         FROM boardMaster bm, boardSub bs
		        WHERE bm.b_no = bs.b_no(+)   
		       )a 
		<where>       
	 	<if test='b_no!=null'>
	     		AND a.b_no = #{b_no}
	 	</if>		
	 	<if test='cb_type != null and cb_type.equals("b_title")'>
	     		AND a.b_title LIKE '%'||#{sb_keyword}||'%'
	 	</if>		
	 	<if test='cb_type != null and cb_type.equals("b_content")'>
	     		AND a.b_content LIKE '%'||#{sb_keyword}||'%'
	 	</if>		
	 	<if test='cb_type != null and cb_type.equals("b_name")'>
	     		AND a.b_name LIKE '%'||#{sb_keyword}||'%'
	 	</if>	
	 	<if test='start>0'>
	 		<![CDATA[ AND a.rno >= #{start} ]]>
	 	</if>		
	 	<if test='end>0'>
	     	<![CDATA[ AND a.rno <= #{end} ]]>
	 	</if>	
	 	</where>
	 	ORDER BY a.b_group desc, a.b_step asc	
	</select>
</mapper>









